/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        goto_bluetooth {
            bindings = <&tog 5>;
            key-positions = <29 5>;
        };

        toggle_gaming {
            bindings = <&tog 6>;
            key-positions = <2 13 15 24 36>;
        };
    };

    behaviors {
        my_mod_tap: my_mod_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "MY_MOD_TAP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            flavor = "tap-preferred";
        };

        new_behavior: new_behavior {
            compatible = "zmk,behavior-mod-morph";
            label = "NEW_BEHAVIOR";
            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
            bindings = <&kp A>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none  &my_mod_tap LS(Q) Q  &my_mod_tap LS(W) W  &my_mod_tap LS(E) E  &my_mod_tap LS(R) R  &my_mod_tap LS(T) T    &my_mod_tap LS(Y) Y  &my_mod_tap LS(U) U  &my_mod_tap LS(I) I  &my_mod_tap LS(O) O  &my_mod_tap LS(P) P         &none
&none  &my_mod_tap LS(A) A  &my_mod_tap LS(S) S  &my_mod_tap LS(D) D  &my_mod_tap LS(F) F  &my_mod_tap LS(G) G    &my_mod_tap LS(H) H  &my_mod_tap LS(J) J  &my_mod_tap LS(K) K  &my_mod_tap LS(L) L  &my_mod_tap LS(SEMI) SEMI   &none
&none  &my_mod_tap LS(Z) Z  &my_mod_tap LS(X) X  &my_mod_tap LS(C) C  &my_mod_tap LS(V) V  &my_mod_tap LS(B) B    &my_mod_tap LS(N) N  &my_mod_tap LS(M) M  &kp LS(KP_COMMA)     &kp KP_DOT           &my_mod_tap LS(FSLH) SLASH  &none
                                                 &new_behavior        &mo 1                &mo 2                  &mo 3                &kp SPACE            &mo 4
            >;
        };

        navigation {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &none      &kp ESCAPE  &none      &none      &none           &none  &kp BACKSPACE   &kp UP_ARROW    &kp DELETE  &none  &none
&none  &kp LC(A)  &kp TAB     &kp LSHFT  &kp LCTRL  &kp LEFT_ALT    &none  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT   &none  &none
&none  &kp LC(Z)  &kp LC(X)   &kp LC(C)  &kp LC(V)  &none           &none  &none           &none           &kp RETURN  &none  &none
                              &none      &mo 1      &mo 2           &mo 3  &kp SPACE       &mo 4
            >;
        };

        upper_row {
            bindings = <
&none  &kp F1           &kp F2           &kp F3           &kp F4           &kp F5             &kp F6           &kp F7           &kp F8           &kp F9           &kp F10          &my_mod_tap F12 F11
&none  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_NUMBER_4  &kp KP_NUMBER_5    &kp KP_NUMBER_6  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_NUMBER_0  &none
&none  &none            &none            &none            &none            &none              &none            &none            &none            &none            &none            &none
                                         &none            &mo 1            &mo 2              &mo 3            &kp SPACE        &mo 4
            >;
        };

        operators {
            bindings = <
&none                    &none     &none   &none     &none       &none          &none      &none          &kp KP_PLUS     &kp KP_ASTERISK  &none                       &none
&my_mod_tap TILDE GRAVE  &kp EXCL  &kp AT  &kp HASH  &kp DOLLAR  &kp PERCENT    &kp CARET  &kp AMPERSAND  &kp KP_MINUS    &kp KP_DIVIDE    &my_mod_tap PIPE BACKSLASH  &none
&none                    &none     &none   &none     &none       &none          &none      &none          &kp UNDERSCORE  &kp KP_EQUAL     &none                       &none
                                           &none     &mo 1       &mo 2          &mo 3      &kp SPACE      &mo 4
            >;
        };

        brackets {
            bindings = <
&none  &none  &none  &none  &none  &none    &none  &none      &kp LEFT_PARENTHESIS                 &kp RIGHT_PARENTHESIS                  &none  &none
&none  &none  &none  &none  &none  &none    &none  &none      &my_mod_tap LEFT_BRACE LEFT_BRACKET  &my_mod_tap RIGHT_BRACE RIGHT_BRACKET  &none  &none
&none  &none  &none  &none  &none  &none    &none  &none      &kp LESS_THAN                        &kp GREATER_THAN                       &none  &none
                     &none  &mo 1  &mo 2    &mo 3  &kp SPACE  &mo 4
            >;
        };

        bluetooth {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &none  &none      &none  &none  &none  &none
&none  &none         &none         &none         &none         &none           &none  &none      &none  &none  &none  &none
&none  &none         &none         &bt BT_CLR    &none         &none           &none  &none      &none  &none  &none  &none
                                   &none         &mo 1         &mo 2           &mo 3  &kp SPACE  &mo 4
            >;
        };

        gaming {
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E      &kp R  &kp T    &none  &none      &kp UP    &none      &none  &none
&kp LSHFT  &kp A  &kp S  &kp D      &kp F  &kp G    &none  &kp LEFT   &kp DOWN  &kp RIGHT  &none  &none
&kp LCTRL  &kp Z  &kp X  &kp C      &kp V  &kp B    &none  &none      &none     &kp ENTER  &none  &none
                         &kp SPACE  &mo 7  &none    &none  &kp SPACE  &none
            >;
        };

        gaming_alt {
            bindings = <
&kp ESCAPE  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                            &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
